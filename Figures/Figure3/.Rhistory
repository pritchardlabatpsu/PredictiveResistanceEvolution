plot(fitdist(compicmut$Abundance,"pois"))#overdispersed
plot(fitdist(compicmut$Abundance,"nbinom"))#fit appears better than poisson
# Of IC50 variables, the best single variable model that includes IC50 is below
fit1 <- glm.nb(Abundance ~ log10(IC50), data=compicmut)
summary(fit1)
#The best single variable model is a model based upon mutation probab
fit2 <- glm.nb(Abundance~Mutation.Probability, data=compicmut)
#Best single variable model
summary(fit2)
#Relative growth is not a good predictor of Abundance
fit3<-glm.nb(Abundance ~ relative_growth, data=compicmut)
summary(fit3)
#Median centering does not help growth predict Abundance
fit4<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
summary(fit4)
#The best 2 variable model includes a log transformation of growth in the presence of drug(IC50) and mutation probability
fit5<-glm.nb(Abundance ~ log10(IC50)+log10(Mutation.Probability), data=compicmut) #Best 2 variable model
summary(fit5)
fit7<-glm.nb(Abundance ~IC50+log10(Mutation.Probability)+relative_growth, data=compicmut) #Best 3 variable model
summary(fit7)# While AIC decreases here,the decrease is small, the coefficient is negative (which is unlikely), and the pval is not particularly significant. Therefore it seems that this best 3 variable model is likely overfit. I will examine LOOCV, and test set mean squared error for final model selection.
#Build a data frame for plotting
Data_fit=data.frame(cbind(compicmut,fit5$fitted.values,fit1$fitted.values,fit2$fitted.values))
#This plots best fit of the IC50 data
x=ggplot(data =Data_fit,aes(fit1.fitted.values,Abundance))
x+geom_point(aes(size=1))+theme_classic()+stat_function(fun=function(x)x, geom="line", aes(colour="square",size=1.0),)+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(data =Data_fit,aes(fit2.fitted.values,Abundance))
x+geom_point(aes(size=1))+theme_classic()+stat_function(fun=function(x)x, geom="line", aes(colour="square",size=1.0),)+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(data =Data_fit,aes(fit5.fitted.values,Abundance))
x+geom_point(aes(size=1))+theme_classic()+stat_function(fun=function(x)x, geom="line", aes(colour="square",size=1.0),)+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
f5no_mut <- update(fit5, . ~ . -log10(Mutation.Probability) )
anova(fit5, f5no_mut)
fit5pois <- glm(Abundance ~ log10(Mutation.Probability)+IC50, family = "poisson", data = compicmut)
pchisq(2 * (logLik(fit5) - logLik(fit5pois)), df = 1, lower.tail = FALSE)
record=matrix(nrow=4,ncol=nrow(compicmut))
for (i in 1:nrow(compicmut)){
train=compicmut[-i,]
test=compicmut[i,]
fit1cv=glm.nb(Abundance~Mutation.Probability, data=train)#Best 1 variable model
fit2cv=glm.nb(Abundance ~ IC50+log10(Mutation.Probability), data=train) #Best 2 variable model
fit3cv=glm.nb(Abundance ~ IC50+log10(Mutation.Probability)+relative_growth,data=train) #Best 3 variable model
record[1,i]=predict(fit1cv, test, type = "response")
record[2,i]=predict(fit2cv, test, type = "response")
record[3,i]=predict(fit3cv, test, type = "response")
pred=predict(fit2cv, test, type = "response", se.fit=T)
record[4,i]=pred$se.fit
}
MSE=matrix(nrow=3,ncol=1)
#TestMSE
MSE[1,1]=round((sum((record[1,]-compicmut$Abundance)^2))/nrow(compicmut),digits=2)
MSE[2,1]=round((sum((record[2,]-compicmut$Abundance)^2))/nrow(compicmut),digits = 2)
MSE[3,1]=round((sum((record[3,]-compicmut$Abundance)^2))/nrow(compicmut),digits = 2)
MSE=data.frame(cbind(c(1,2,3),as.numeric(as.character(c(MSE[,1]))),c("LOOCV","LOOCV","LOOCV")), stringsAsFactors = F)
colnames(MSE)[1:3]=c("Variable_Number_In_Model","MSE","Type")
MSE=transform(MSE, MSE = as.numeric(MSE))
x=ggplot(data=MSE, aes(x=Variable_Number_In_Model,y=MSE))
x+geom_bar(stat="identity")+theme_classic()
#Build data frame
binconU=sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))+Data_fit$Abundance
binconL=Data_fit$Abundance-sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))
Data_fit=data.frame(cbind(compicmut,fit5$fitted.values,fit1$fitted.values,fit2$fitted.values,record[2,],record[4,],binconU,binconL))
colnames(Data_fit)[9:15]=c("Vars_3","Vars_1","Vars_2","CV_2Var_mod","sd","binconL","binconU")
plot(Data_fit$Abundance,Data_fit$CV_2Var_mod,xlim=c(1,65),ylim=c(1,65),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$CV_2Var_mod-Data_fit$sd,Data_fit$Abundance,Data_fit$CV_2Var_mod+Data_fit$sd, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$CV_2Var_mod,Data_fit$binconU,Data_fit$CV_2Var_mod, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
m=lm(Abundance~Vars_2+0,data=Data_fit)
summary(m)
#Fitting only based upon growth
#The best 2 variable model includes a log transformation of growth in the presence of drug(IC50) and mutation probability
fit5<-glm.nb(Abundance ~ IC50+log10(Mutation.Probability), data=compicmut) #Best 2 variable model
summary(fit5)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("lmtest")
library("ggplot2")
library("MASS")
library("fitdistrplus")
library("lme4")
library("boot")
setwd("~/MutationFreq_ABL_IC50/Figures/Figure 3")
compicmut=read.csv("Combined_data_frame_IC_Mutprob_Abundance.csv",header=T,stringsAsFactors=F)
x=ggplot(compicmut,aes(Mutation.Probability,IC50))
x+geom_point(aes(size=1))+theme_classic()+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(compicmut,aes(IC50,med_ctr_growth))
x+geom_point(aes(size=1))+theme_classic()+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(compicmut,aes(med_ctr_growth,Mutation.Probability))
x+geom_point(aes(size=1))+theme_classic()+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
plot(fitdist(compicmut$Abundance,"pois"))#overdispersed
plot(fitdist(compicmut$Abundance,"nbinom"))#fit appears better than poisson
# Of IC50 variables, the best single variable model that includes IC50 is below
fit1 <- glm.nb(Abundance ~ log10(IC50), data=compicmut)
summary(fit1)
#The best single variable model is a model based upon mutation probab
fit2 <- glm.nb(Abundance~Mutation.Probability, data=compicmut)
#Best single variable model
summary(fit2)
#Relative growth is not a good predictor of Abundance
fit3<-glm.nb(Abundance ~ relative_growth, data=compicmut)
summary(fit3)
#Median centering does not help growth predict Abundance
fit4<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
summary(fit4)
#The best 2 variable model includes a log transformation of growth in the presence of drug(IC50) and mutation probability
fit5<-glm.nb(Abundance ~ IC50+log10(Mutation.Probability), data=compicmut) #Best 2 variable model
summary(fit5)
fit7<-glm.nb(Abundance ~IC50+log10(Mutation.Probability)+relative_growth, data=compicmut) #Best 3 variable model
summary(fit7)# While AIC decreases here,the decrease is small, the coefficient is negative (which is unlikely), and the pval is not particularly significant. Therefore it seems that this best 3 variable model is likely overfit. I will examine LOOCV, and test set mean squared error for final model selection.
#Build a data frame for plotting
Data_fit=data.frame(cbind(compicmut,fit5$fitted.values,fit1$fitted.values,fit2$fitted.values))
#This plots best fit of the IC50 data
x=ggplot(data =Data_fit,aes(fit1.fitted.values,Abundance))
x+geom_point(aes(size=1))+theme_classic()+stat_function(fun=function(x)x, geom="line", aes(colour="square",size=1.0),)+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(data =Data_fit,aes(fit2.fitted.values,Abundance))
x+geom_point(aes(size=1))+theme_classic()+stat_function(fun=function(x)x, geom="line", aes(colour="square",size=1.0),)+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(data =Data_fit,aes(fit5.fitted.values,Abundance))
x+geom_point(aes(size=1))+theme_classic()+stat_function(fun=function(x)x, geom="line", aes(colour="square",size=1.0),)+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
f5no_mut <- update(fit5, . ~ . -log10(Mutation.Probability) )
anova(fit5, f5no_mut)
fit5pois <- glm(Abundance ~ log10(Mutation.Probability)+IC50, family = "poisson", data = compicmut)
pchisq(2 * (logLik(fit5) - logLik(fit5pois)), df = 1, lower.tail = FALSE)
record=matrix(nrow=4,ncol=nrow(compicmut))
for (i in 1:nrow(compicmut)){
train=compicmut[-i,]
test=compicmut[i,]
fit1cv=glm.nb(Abundance~Mutation.Probability, data=train)#Best 1 variable model
fit2cv=glm.nb(Abundance ~ IC50+log10(Mutation.Probability), data=train) #Best 2 variable model
fit3cv=glm.nb(Abundance ~ IC50+log10(Mutation.Probability)+relative_growth,data=train) #Best 3 variable model
record[1,i]=predict(fit1cv, test, type = "response")
record[2,i]=predict(fit2cv, test, type = "response")
record[3,i]=predict(fit3cv, test, type = "response")
pred=predict(fit2cv, test, type = "response", se.fit=T)
record[4,i]=pred$se.fit
}
MSE=matrix(nrow=3,ncol=1)
#TestMSE
MSE[1,1]=round((sum((record[1,]-compicmut$Abundance)^2))/nrow(compicmut),digits=2)
MSE[2,1]=round((sum((record[2,]-compicmut$Abundance)^2))/nrow(compicmut),digits = 2)
MSE[3,1]=round((sum((record[3,]-compicmut$Abundance)^2))/nrow(compicmut),digits = 2)
MSE=data.frame(cbind(c(1,2,3),as.numeric(as.character(c(MSE[,1]))),c("LOOCV","LOOCV","LOOCV")), stringsAsFactors = F)
colnames(MSE)[1:3]=c("Variable_Number_In_Model","MSE","Type")
MSE=transform(MSE, MSE = as.numeric(MSE))
x=ggplot(data=MSE, aes(x=Variable_Number_In_Model,y=MSE))
x+geom_bar(stat="identity")+theme_classic()
#Build data frame
binconU=sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))+Data_fit$Abundance
binconL=Data_fit$Abundance-sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))
Data_fit=data.frame(cbind(compicmut,fit5$fitted.values,fit1$fitted.values,fit2$fitted.values,record[2,],record[4,],binconU,binconL))
colnames(Data_fit)[9:15]=c("Vars_3","Vars_1","Vars_2","CV_2Var_mod","sd","binconL","binconU")
plot(Data_fit$Abundance,Data_fit$CV_2Var_mod,xlim=c(1,65),ylim=c(1,65),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$CV_2Var_mod-Data_fit$sd,Data_fit$Abundance,Data_fit$CV_2Var_mod+Data_fit$sd, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$CV_2Var_mod,Data_fit$binconU,Data_fit$CV_2Var_mod, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
m=lm(Abundance~Vars_2+0,data=Data_fit)
summary(m)
#Fitting only based upon growth
#Fitting only based upon growth
growthfit1var<-glm.nb(Abundance ~ IC50, data=compicmut) #Best 2 variable model
summary(growthfit1var)
#Fitting only based upon growth
growthfit1IC50<-glm.nb(Abundance ~ IC50, data=compicmut) #Best 2 variable model
growthfit1lgIC50<-glm.nb(Abundance ~ log10(IC50), data=compicmut)
growthfit1_relgrow<-glm.nb(Abundance ~ relative_growth, data=compicmut)
growthfit1_lgrelgrow<-glm.nb(Abundance ~ log10(relative_growth), data=compicmut)
#Best 2 variable model
summary(growthfit1var)
#Fitting only based upon growth
growthfit1IC50<-glm.nb(Abundance ~ IC50, data=compicmut) #Best 2 variable model
growthfit1lgIC50<-glm.nb(Abundance ~ log10(IC50), data=compicmut)
growthfit1_relgrow<-glm.nb(Abundance ~ relative_growth, data=compicmut)
growthfit1_lgrelgrow<-glm.nb(Abundance ~ log10(relative_growth), data=compicmut)
growthfit1_medgrow<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
growthfit1_lgmedgrow<-glm.nb(Abundance ~ log10(med_ctr_growth), data=compicmut)
#Best 2 variable model
summary(growthfit1var)
growthfit1IC50$aic
#Fitting only based upon growth
growthfit1IC50<-glm.nb(Abundance ~ IC50, data=compicmut) #Best 2 variable model
growthfit1lgIC50<-glm.nb(Abundance ~ log10(IC50), data=compicmut)
growthfit1_relgrow<-glm.nb(Abundance ~ relative_growth, data=compicmut)
growthfit1_lgrelgrow<-glm.nb(Abundance ~ log10(relative_growth), data=compicmut)
growthfit1_medgrow<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
growthfit1_lgmedgrow<-glm.nb(Abundance ~ log10(med_ctr_growth), data=compicmut)
var1_aic=c(growthfit1IC50$aic,growthfit1lgIC50$aic,growthfit1_relgrow$aic,growthfit1_lgrelgrow$aic,growthfit1_medgrow$aic,growthfit1_lgmedgrow$aic)
growthfit2IC50<-glm.nb(Abundance ~ IC50+relative, data=compicmut) #Best 2 variable model
#Fitting only based upon growth
growthfit1IC50<-glm.nb(Abundance ~ IC50, data=compicmut) #Best 2 variable model
growthfit1lgIC50<-glm.nb(Abundance ~ log10(IC50), data=compicmut)
growthfit1_relgrow<-glm.nb(Abundance ~ relative_growth, data=compicmut)
growthfit1_lgrelgrow<-glm.nb(Abundance ~ log10(relative_growth), data=compicmut)
growthfit1_medgrow<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
growthfit1_lgmedgrow<-glm.nb(Abundance ~ log10(med_ctr_growth), data=compicmut)
var1_aic=c(growthfit1IC50$aic,growthfit1lgIC50$aic,growthfit1_relgrow$aic,growthfit1_lgrelgrow$aic,growthfit1_medgrow$aic,growthfit1_lgmedgrow$aic)
growthfit2IC50<-glm.nb(Abundance ~ IC50+relative, data=compicmut) #Best 2 variable model
var1_aic
growthfit1_medgrow
summary(growthfit1_lgmedgrow)
growthfit1IC50
growthfit1lgIC50
#Fitting only based upon growth
growthfit1IC50<-glm.nb(Abundance ~ IC50, data=compicmut) #Best 2 variable model
growthfit1lgIC50<-glm.nb(Abundance ~ log10(IC50), data=compicmut)
growthfit1_relgrow<-glm.nb(Abundance ~ relative_growth, data=compicmut)
growthfit1_lgrelgrow<-glm.nb(Abundance ~ log10(relative_growth), data=compicmut)
growthfit1_medgrow<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
growthfit1_lgmedgrow<-glm.nb(Abundance ~ log10(med_ctr_growth), data=compicmut)
var1_aic=c(growthfit1IC50$aic,growthfit1lgIC50$aic,growthfit1_relgrow$aic,growthfit1_lgrelgrow$aic,growthfit1_medgrow$aic,growthfit1_lgmedgrow$aic)
growthfit2IC50<-glm.nb(Abundance ~ IC50+relative_growth, data=compicmut) #Best 2 variable model
growthfit1lgIC50<-glm.nb(Abundance ~ log10(IC50), data=compicmut)
growthfit1_relgrow<-glm.nb(Abundance ~ relative_growth, data=compicmut)
growthfit1_lgrelgrow<-glm.nb(Abundance ~ log10(relative_growth), data=compicmut)
growthfit1_medgrow<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
growthfit1_lgmedgrow<-glm.nb(Abundance ~ log10(med_ctr_growth), data=compicmut)
#Best 2 variable model
summary(growthfit1var)
growthfit2IC50
growthfit2IC50
summary(growthfit2IC50)
#Fitting only based upon growth
growthfit1IC50<-glm.nb(Abundance ~ IC50, data=compicmut) #Best 2 variable model
growthfit1lgIC50<-glm.nb(Abundance ~ log10(IC50), data=compicmut)
growthfit1_relgrow<-glm.nb(Abundance ~ relative_growth, data=compicmut)
growthfit1_lgrelgrow<-glm.nb(Abundance ~ log10(relative_growth), data=compicmut)
growthfit1_medgrow<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
growthfit1_lgmedgrow<-glm.nb(Abundance ~ log10(med_ctr_growth), data=compicmut)
var1_aic=c(growthfit1IC50$aic,growthfit1lgIC50$aic,growthfit1_relgrow$aic,growthfit1_lgrelgrow$aic,growthfit1_medgrow$aic,growthfit1_lgmedgrow$aic)
growthfit2IC50<-glm.nb(Abundance ~ IC50+med_ctr_growth, data=compicmut) #Best 2 variable model
growthfit1lgIC50<-glm.nb(Abundance ~ log10(IC50), data=compicmut)
growthfit1_relgrow<-glm.nb(Abundance ~ relative_growth, data=compicmut)
growthfit1_lgrelgrow<-glm.nb(Abundance ~ log10(relative_growth), data=compicmut)
growthfit1_medgrow<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
growthfit1_lgmedgrow<-glm.nb(Abundance ~ log10(med_ctr_growth), data=compicmut)
#Best 2 variable model
summary(growthfit1var)
summary(growthfit2IC50)
#Fitting only based upon growth
growthfit1IC50<-glm.nb(Abundance ~ IC50, data=compicmut) #Best 2 variable model
growthfit1lgIC50<-glm.nb(Abundance ~ log10(IC50), data=compicmut)
growthfit1_relgrow<-glm.nb(Abundance ~ relative_growth, data=compicmut)
growthfit1_lgrelgrow<-glm.nb(Abundance ~ log10(relative_growth), data=compicmut)
growthfit1_medgrow<-glm.nb(Abundance ~ med_ctr_growth, data=compicmut)
growthfit1_lgmedgrow<-glm.nb(Abundance ~ log10(med_ctr_growth), data=compicmut)
growthfits<-glm.nb(Abundance ~ IC50+med_ctr_growth+relative_growth, data=compicmut) #Best 2 variable model
#Best 2 variable model
summary(growthfits)
growthfits$se.fit
View(growthfits)
growthfit=glm.nb(Abundance ~ IC50+relative_growth+med_ctr_growth,data=train)
#Build data frame
binconU=sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))+Data_fit$Abundance
binconL=Data_fit$Abundance-sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))
Data_fit=data.frame(cbind(compicmut,fit5$fitted.values,fit1$fitted.values,fit2$fitted.values,record[2,],record[5,],binconU,binconL,record[6,]))
record=matrix(nrow=6,ncol=nrow(compicmut))
for (i in 1:nrow(compicmut)){
train=compicmut[-i,]
test=compicmut[i,]
fit1cv=glm.nb(Abundance~Mutation.Probability, data=train)#Best 1 variable model
fit2cv=glm.nb(Abundance ~ IC50+log10(Mutation.Probability), data=train) #Best 2 variable model
fit3cv=glm.nb(Abundance ~ IC50+log10(Mutation.Probability)+relative_growth,data=train) #Best 3 variable model
growthfit=glm.nb(Abundance ~ IC50+relative_growth+med_ctr_growth,data=train)
record[1,i]=predict(fit1cv, test, type = "response")
record[2,i]=predict(fit2cv, test, type = "response")
record[3,i]=predict(fit3cv, test, type = "response")
record[4,i]=predict(growthfit, test, type = "response")
pred=predict(fit2cv, test, type = "response", se.fit=T)
growpred=predict(growthfit, test, type = "response", se.fit=T)
record[5,i]=pred$se.fit
record[6,i]=growpred$se.fit
}
MSE=matrix(nrow=3,ncol=1)
#TestMSE
MSE[1,1]=round((sum((record[1,]-compicmut$Abundance)^2))/nrow(compicmut),digits=2)
MSE[2,1]=round((sum((record[2,]-compicmut$Abundance)^2))/nrow(compicmut),digits = 2)
MSE[3,1]=round((sum((record[3,]-compicmut$Abundance)^2))/nrow(compicmut),digits = 2)
MSE=data.frame(cbind(c(1,2,3),as.numeric(as.character(c(MSE[,1]))),c("LOOCV","LOOCV","LOOCV")), stringsAsFactors = F)
colnames(MSE)[1:3]=c("Variable_Number_In_Model","MSE","Type")
MSE=transform(MSE, MSE = as.numeric(MSE))
#Build data frame
binconU=sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))+Data_fit$Abundance
binconL=Data_fit$Abundance-sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))
Data_fit=data.frame(cbind(compicmut,fit5$fitted.values,fit1$fitted.values,fit2$fitted.values,record[2,],record[5,],binconU,binconL,record[6,]))
colnames(Data_fit)[9:15]=c("Vars_3","Vars_1","Vars_2","CV_2Var_mod","sd","binconL","binconU","sdgrow")
#Build data frame
binconU=sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))+Data_fit$Abundance
binconL=Data_fit$Abundance-sqrt(sum(Data_fit$Abundance)*(Data_fit$Abundance/sum(Data_fit$Abundance))*((sum(Data_fit$Abundance)-Data_fit$Abundance)/sum(Data_fit$Abundance)))
Data_fit=data.frame(cbind(compicmut,fit5$fitted.values,fit1$fitted.values,fit2$fitted.values,record[2,],record[5,],binconU,binconL,record[6,],record[4,]))
colnames(Data_fit)[9:17]=c("Vars_3","Vars_1","Vars_2","CV_2Var_mod","sd","binconL","binconU","sdgrow","growpred")
plot(Data_fit$Abundance,Data_fit$CV_2Var_mod,xlim=c(1,65),ylim=c(1,65),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$CV_2Var_mod-Data_fit$sd,Data_fit$Abundance,Data_fit$CV_2Var_mod+Data_fit$sd, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$CV_2Var_mod,Data_fit$binconU,Data_fit$CV_2Var_mod, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
m=lm(Abundance~Vars_2+0,data=Data_fit)
summary(m)
plot(Data_fit$Abundance,Data_fit$CV_2Var_mod,xlim=c(1,65),ylim=c(1,65),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$growpred-Data_fit$sdgrow,Data_fit$Abundance,Data_fit$growpred+Data_fit$sdgrow, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$growpred,Data_fit$binconU,Data_fit$growpred, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
plot(Data_fit$Abundance,Data_fit$growpred,xlim=c(1,65),ylim=c(1,65),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$growpred-Data_fit$sdgrow,Data_fit$Abundance,Data_fit$growpred+Data_fit$sdgrow, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$growpred,Data_fit$binconU,Data_fit$growpred, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
summary(lm(abundance~growpred,Data_fit))
plot(Data_fit$Abundance,Data_fit$growpred,xlim=c(1,65),ylim=c(1,65),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$growpred-Data_fit$sdgrow,Data_fit$Abundance,Data_fit$growpred+Data_fit$sdgrow, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$growpred,Data_fit$binconU,Data_fit$growpred, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
summary(lm(Abundance~growpred,Data_fit))
plot(Data_fit$Abundance,Data_fit$growpred,xlim=c(1,65),ylim=c(1,65),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$growpred-Data_fit$sdgrow,Data_fit$Abundance,Data_fit$growpred+Data_fit$sdgrow, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$growpred,Data_fit$binconU,Data_fit$growpred, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
summary(lm(Abundance~growpred,Data_fit))
plot(Data_fit$Abundance,Data_fit$growpred,xlim=c(1,65),ylim=c(1,65),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$growpred-Data_fit$sdgrow,Data_fit$Abundance,Data_fit$growpred+Data_fit$sdgrow, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$growpred,Data_fit$binconU,Data_fit$growpred, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
summary(lm(Abundance~growpred+0,Data_fit))
plot(Data_fit$Abundance,Data_fit$growpred,xlim=c(1,65),ylim=c(1,65),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$growpred-Data_fit$sdgrow,Data_fit$Abundance,Data_fit$growpred+Data_fit$sdgrow, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$growpred,Data_fit$binconU,Data_fit$growpred, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
summary(lm(Abundance~growpred,Data_fit))
plot(Data_fit$Abundance,Data_fit$growpred,xlim=c(1,50),ylim=c(1,50),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$growpred-Data_fit$sdgrow,Data_fit$Abundance,Data_fit$growpred+Data_fit$sdgrow, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$growpred,Data_fit$binconU,Data_fit$growpred, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
summary(lm(Abundance~growpred,Data_fit))
plot(Data_fit$Abundance,Data_fit$growpred,xlim=c(1,50),ylim=c(1,50),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance,Data_fit$growpred-Data_fit$sdgrow,Data_fit$Abundance,Data_fit$growpred+Data_fit$sdgrow, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$growpred,Data_fit$binconU,Data_fit$growpred, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
x=ggplot(data=MSE, aes(x=Variable_Number_In_Model,y=MSE))
x+geom_bar(stat="identity")+theme_classic()
plot(fitdist(compicmut$Abundance,"pois"))#overdispersed
plot(fitdist(compicmut$Abundance,"nbinom"))#fit appears better than poisson
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("lmtest")
library("ggplot2")
library("MASS")
library("fitdistrplus")
library("lme4")
library("boot")
setwd("~/MutationFreq_ABL_IC50/Figures/Figure 3")
compicmut=read.csv("Combined_data_frame_IC_Mutprob_Abundance.csv",header=T,stringsAsFactors=F)
x=ggplot(compicmut,aes(Mutation.Probability,IC50))
x+geom_point(aes(size=1))+theme_classic()+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(compicmut,aes(IC50,med_ctr_growth))
x+geom_point(aes(size=1))+theme_classic()+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(compicmut,aes(med_ctr_growth,Mutation.Probability))
x+geom_point(aes(size=1))+theme_classic()+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
plot(fitdist(compicmut$Abundance_Sanger,"pois"))#overdispersed
plot(fitdist(compicmut$Abundance_Sanger,"nbinom"))#fit appears better than poisson
# Of IC50 variables, the best single variable model that includes IC50 is below
fit1 <- glm.nb(Abundance_Sanger ~ log10(IC50), data=compicmut)
summary(fit1)
#The best single variable model is a model based upon mutation probab
fit2 <- glm.nb(Abundance_Sanger~Mutation.Probability, data=compicmut)
#Best single variable model
summary(fit2)
#Relative growth is not a good predictor of Abundance_Sanger
fit3<-glm.nb(Abundance_Sanger ~ relative_growth, data=compicmut)
summary(fit3)
#Median centering does not help growth predict Abundance_Sanger
fit4<-glm.nb(Abundance_Sanger ~ med_ctr_growth, data=compicmut)
summary(fit4)
#The best 2 variable model includes a log transformation of growth in the presence of drug(IC50) and mutation probability
fit5<-glm.nb(Abundance_Sanger ~ log10(IC50)+log10(Mutation.Probability), data=compicmut) #Best 2 variable model
summary(fit5)
fit7<-glm.nb(Abundance_Sanger ~IC50+log10(Mutation.Probability)+relative_growth, data=compicmut) #Best 3 variable model
summary(fit7)# While AIC decreases here,the decrease is small, the coefficient is negative (which is unlikely), and the pval is not particularly significant. Therefore it seems that this best 3 variable model is likely overfit. I will examine LOOCV, and test set mean squared error for final model selection.
#Build a data frame for plotting
Data_fit=data.frame(cbind(compicmut,fit5$fitted.values,fit1$fitted.values,fit2$fitted.values))
#This plots best fit of the IC50 data
x=ggplot(data =Data_fit,aes(fit1.fitted.values,Abundance_Sanger))
x+geom_point(aes(size=1))+theme_classic()+stat_function(fun=function(x)x, geom="line", aes(colour="square",size=1.0),)+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(data =Data_fit,aes(fit2.fitted.values,Abundance_Sanger))
x+geom_point(aes(size=1))+theme_classic()+stat_function(fun=function(x)x, geom="line", aes(colour="square",size=1.0),)+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
x=ggplot(data =Data_fit,aes(fit5.fitted.values,Abundance_Sanger))
x+geom_point(aes(size=1))+theme_classic()+stat_function(fun=function(x)x, geom="line", aes(colour="square",size=1.0),)+theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
f5no_mut <- update(fit5, . ~ . -log10(Mutation.Probability) )
anova(fit5, f5no_mut)
fit5pois <- glm(Abundance_Sanger ~ log10(Mutation.Probability)+IC50, family = "poisson", data = compicmut)
pchisq(2 * (logLik(fit5) - logLik(fit5pois)), df = 1, lower.tail = FALSE)
record=matrix(nrow=4,ncol=nrow(compicmut))
for (i in 1:nrow(compicmut)){
train=compicmut[-i,]
test=compicmut[i,]
fit1cv=glm.nb(Abundance_Sanger~Mutation.Probability, data=train)#Best 1 variable model
fit2cv=glm.nb(Abundance_Sanger ~ log10(IC50)+log10(Mutation.Probability), data=train) #Best 2 variable model
fit3cv=glm.nb(Abundance_Sanger ~ IC50+log10(Mutation.Probability)+relative_growth,data=train) #Best 3 variable model
record[1,i]=predict(fit1cv, test, type = "response")
record[2,i]=predict(fit2cv, test, type = "response")
record[3,i]=predict(fit3cv, test, type = "response")
pred=predict(fit2cv, test, type = "response", se.fit=T)
record[4,i]=pred$se.fit
}
MSE=matrix(nrow=3,ncol=1)
#TestMSE
MSE[1,1]=round((sum((record[1,]-compicmut$Abundance_Sanger)^2))/nrow(compicmut),digits=2)
MSE[2,1]=round((sum((record[2,]-compicmut$Abundance_Sanger)^2))/nrow(compicmut),digits = 2)
MSE[3,1]=round((sum((record[3,]-compicmut$Abundance_Sanger)^2))/nrow(compicmut),digits = 2)
MSE=data.frame(cbind(c(1,2,3),as.numeric(as.character(c(MSE[,1]))),c("LOOCV","LOOCV","LOOCV")), stringsAsFactors = F)
colnames(MSE)[1:3]=c("Variable_Number_In_Model","MSE","Type")
MSE=transform(MSE, MSE = as.numeric(MSE))
x=ggplot(data=MSE, aes(x=Variable_Number_In_Model,y=MSE))
x+geom_bar(stat="identity")+theme_classic()
#Build data frame
binconU=sqrt(sum(Data_fit$Abundance_Sanger)*(Data_fit$Abundance_Sanger/sum(Data_fit$Abundance_Sanger))*((sum(Data_fit$Abundance_Sanger)-Data_fit$Abundance_Sanger)/sum(Data_fit$Abundance_Sanger)))+Data_fit$Abundance_Sanger
binconL=Data_fit$Abundance_Sanger-sqrt(sum(Data_fit$Abundance_Sanger)*(Data_fit$Abundance_Sanger/sum(Data_fit$Abundance_Sanger))*((sum(Data_fit$Abundance_Sanger)-Data_fit$Abundance_Sanger)/sum(Data_fit$Abundance_Sanger)))
Data_fit=data.frame(cbind(compicmut,fit5$fitted.values,fit1$fitted.values,fit2$fitted.values,record[2,],record[4,],binconU,binconL))
colnames(Data_fit)[9:15]=c("Vars_3","Vars_1","Vars_2","CV_2Var_mod","sd","binconL","binconU")
plot(Data_fit$Abundance_Sanger,Data_fit$CV_2Var_mod,xlim=c(1,250),ylim=c(1,250),
pch=19,cex=2.5,cex.axis=2,cex.lab=1.5, xlab="Measured Counts", ylab="Predicted Counts")
# hack: we draw arrows but with very special "arrowheads"
arrows(Data_fit$Abundance_Sanger,Data_fit$CV_2Var_mod-Data_fit$sd,Data_fit$Abundance_Sanger,Data_fit$CV_2Var_mod+Data_fit$sd, length=0.09, angle=90,lwd=3, code=3)
arrows(Data_fit$binconL,Data_fit$CV_2Var_mod,Data_fit$binconU,Data_fit$CV_2Var_mod, length=0.09, angle=90,lwd=3, code=3)
abline(a=0,b=1,col="red",lwd=3)
m=lm(Vars_2~Abundance_Sanger+0,data=Data_fit)
summary(m)
x=ggplot(data=MSE, aes(x=Variable_Number_In_Model,y=MSE))
x+geom_bar(stat="identity")+theme_classic()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("lmtest")
library("ggplot2")
library("MASS")
library("fitdistrplus")
library("lme4")
library("boot")
setwd("~/MutationFreq_ABL_IC50/Figures/Figure 3")
compicmut=read.csv("Combined_data_frame_IC_Mutprob_abundance_withalpha_11_18_2018.csv",header=T,stringsAsFactors=F)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("lmtest")
library("ggplot2")
library("MASS")
library("fitdistrplus")
library("lme4")
library("boot")
setwd("~/MutationFreq_ABL_IC50/Figures/Figure 3")
compicmut=read.csv("Combined_data_frame_IC_Mutprob_abundance_withalpha_11_18_2018.csv",header=T,stringsAsFactors=F)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("lmtest")
library("ggplot2")
library("MASS")
library("fitdistrplus")
library("lme4")
library("boot")
setwd("~/MutationFreq_ABL_IC50/Figures/Figure 3")
compicmut=read.csv("Combined_data_frame_IC_Mutprob_abundance_withalpha_11_18_2018.csv",header=T,stringsAsFactors=F)
View(compicmut)
# Of IC50 variables, the best single variable model that includes IC50 is below
fit1 <- glm.nb(Abundance ~ alpha_Free, data=compicmut)
summary(fit1)
# Of IC50 variables, the best single variable model that includes IC50 is below
fit1 <- glm.nb(Abundance ~ log10(alpha_Free), data=compicmut)
summary(fit1)
#The best 2 variable model includes a log transformation of growth in the presence of drug(IC50) and mutation probability
fit5<-glm.nb(Abundance ~ alpha_Free+log10(Mutation.Probability), data=compicmut) #Best 2 variable model
summary(fit5)
fit7<-glm.nb(Abundance ~alpha_Free+log10(Mutation.Probability)+relative_growth, data=compicmut) #Best 3 variable model
summary(fit7)# While AIC decreases here,the decrease is small, the coefficient is negative (which is unlikely), and the pval is not particularly significant. Therefore it seems that this best 3 variable model is likely overfit. I will examine LOOCV, and test set mean squared error for final model selection.
record=matrix(nrow=6,ncol=nrow(compicmut))
for (i in 1:nrow(compicmut)){
train=compicmut[-i,]
test=compicmut[i,]
fit1cv=glm.nb(Abundance~Mutation.Probability, data=train)#Best 1 variable model
fit2cv=glm.nb(Abundance ~ alpha_Free+log10(Mutation.Probability), data=train) #Best 2 variable model
fit3cv=glm.nb(Abundance ~ alpha_Free+log10(Mutation.Probability)+relative_growth,data=train) #Best 3 variable model
growthfit=glm.nb(Abundance ~ alpha_Free+relative_growth+med_ctr_growth,data=train)
record[1,i]=predict(fit1cv, test, type = "response")
record[2,i]=predict(fit2cv, test, type = "response")
record[3,i]=predict(fit3cv, test, type = "response")
record[4,i]=predict(growthfit, test, type = "response")
pred=predict(fit2cv, test, type = "response", se.fit=T)
growpred=predict(growthfit, test, type = "response", se.fit=T)
record[5,i]=pred$se.fit
record[6,i]=growpred$se.fit
}
MSE=matrix(nrow=3,ncol=1)
#TestMSE
MSE[1,1]=round((sum((record[1,]-compicmut$Abundance)^2))/nrow(compicmut),digits=2)
MSE[2,1]=round((sum((record[2,]-compicmut$Abundance)^2))/nrow(compicmut),digits = 2)
MSE[3,1]=round((sum((record[3,]-compicmut$Abundance)^2))/nrow(compicmut),digits = 2)
MSE=data.frame(cbind(c(1,2,3),as.numeric(as.character(c(MSE[,1]))),c("LOOCV","LOOCV","LOOCV")), stringsAsFactors = F)
colnames(MSE)[1:3]=c("Variable_Number_In_Model","MSE","Type")
MSE=transform(MSE, MSE = as.numeric(MSE))
x=ggplot(data=MSE, aes(x=Variable_Number_In_Model,y=MSE))
x+geom_bar(stat="identity")+theme_classic()
